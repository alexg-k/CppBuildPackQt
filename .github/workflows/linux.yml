name: Linux

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *' # build at least once a month

env:
  artifactPackage: CppBuildPackQt-x86_64.AppImage
  qtVersion: 6.8.1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BuildType: [Debug, Release]
    steps:
      - name: Install System Packages
        run: |
          sudo apt update
          sudo apt install libvulkan-dev
      - name: Install Cmake
        uses: lukka/get-cmake@latest
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.qtVersion }}
          host: linux
          target: desktop
          arch: linux_gcc_64
          dir: ${{ runner.temp }}
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Configure
        run: cmake --fresh -S . -B build/${{ matrix.BuildType }} -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
      - name: Build
        run: cmake --build build/${{ matrix.BuildType }} --target all --config ${{matrix.BuildType}}
      - name: Package
        run: NO_STRIP=true DESTDIR=${{ github.workspace }}/build/${{ matrix.BuildType }}/AppDir/ cmake --build build/${{ matrix.BuildType }} --target install
      - name: Cache Artifact
        uses: actions/cache@v4
        with:
          path: ./build/${{ matrix.BuildType }}/
          key: ${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.BuildType }}
      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: Package-${{ matrix.BuildType }}
          path: ./build/${{ matrix.BuildType }}/${{ env.artifactPackage }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install Cmake
        uses: lukka/get-cmake@latest
      - name: Get Cached Artifact
        uses: actions/cache@v4
        with:
          path: ./build/Debug/
          key: ${{ github.run_id }}-${{ github.run_attempt }}-Debug
      - name: Test
        run: ctest --test-dir build/Debug --output-on-failure --verbose

  release:
    needs: test
    if: needs.test.result == 'success' && github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Get Cached Artifact
        uses: actions/cache@v4
        with:
          path: ./build/Release/
          key: ${{ github.run_id }}-${{ github.run_attempt }}-Release
      - name: Create Version Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/Release/${{ env.artifactPackage }}
      - name: Create Continuous Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/Release/${{ env.artifactPackage }}
          tag_name: continuous-build
